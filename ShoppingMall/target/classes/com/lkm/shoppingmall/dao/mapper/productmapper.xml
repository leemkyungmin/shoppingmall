<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.lkm.shoppingmall.dao.productDAO">
	
	<select id="mylist" parameterType="String" resultType="com.lkm.shoppingmall.dto.myproduct">
		SELECT p.PIDX,p.pNAME,p.PDATE,p.DIDX,p.Price,p.PORDER_PRICE,count(r.RIDX) as rCount, NVL(sum(r.RATING),0) as rTotal,TO_CHAR(p.pSumnail) as pSumnail
		FROM PRODUCTS p LEFT OUTER JOIN REVIEW r on p.PIDX = r.PIDX
		WHERE p.DIDX =#{param1}
        group by p.PIDX,p.pNAME,p.PDATE,p.DIDX,p.Price,p.PORDER_PRICE,TO_CHAR(p.pSumnail)
	</select>
	<update id="priceUpdate" parameterType="Map" >
		UPDATE PRODUCTS
		SET PRICE= (SELECT MIN(POPRICE) FROM PRODUCTS_OPTION WHERE PIDX=${pidx} AND PODEPT !=0 )
		WHERE PIDX=${pidx} 
	</update>
	<insert id="insertproduct" parameterType="Map" >
		<selectKey keyProperty="pidx" resultType="int" order="BEFORE">
			SELECT PRODUCTS_SEQ.NEXTVAL as pidx FROM DUAL
		</selectKey>
		INSERT INTO PRODUCTS(
		PIDX,
		PNAME,
		PRICE,
		PRICE_PER,
		PDATE,
		PORDER_PRICE,
		DIDX,
		PSUMNAIL,
		PRATING,
		POST_DEPT,
		PTAG
		) VALUES (
			${pidx},
			'${pName}',
			${price},
			'0',
			SYSDATE,
			${order_price},
			${didx},
			'${psumNail}',
			0,
			'${post_dept}',
			'${tags}'	
		)
	</insert>
	<insert id="insertproductnotice" parameterType="Map">
		INSERT INTO PRODUCTS_NOTICE(PNIDX,PNIMG,PIDX,PIMG)
		VALUES (
			PRODUCT_NOTICE_SEQ.NEXTVAL,
			'${notice_img}',
			${pidx},
			'${pimg}'
		)
	</insert>
	<insert id="insertproductOption1" parameterType="Map">
		<selectKey keyProperty="poidx" resultType="int" order="BEFORE">
			SELECT PRODUCT_NOTICE_SEQ.nextval as poidx FROM dual
		</selectKey>
		INSERT INTO PRODUCTS_OPTION(POIDX,PONAME,POPRICE,PIDX)
		VALUES (
			#{poidx},
			'${poname}',
			${avg_price},
			${pidx}
		)
	</insert>
	<insert id="insertproductOption2" parameterType="Map">
		INSERT INTO PRODUCTS_OPTION(POIDX,PONAME,POPRICE,PODEPT,POEND,PIDX)
		VALUES(
			PRODUCT_NOTICE_SEQ.nextval,
			'${op2_name}',
			${op2_price},
			${poidx},
			'Y',
			${pidx}
		)
	</insert>
	
	<select id="selectmyProduct" parameterType="com.lkm.shoppingmall.dto.productsDto" resultType="com.lkm.shoppingmall.dto.productsDto">
		SELECT *
		FROM PRODUCTS
		WHERE PIDX = ${pIdx}
	
	</select>
	<select id="selectmyProduct_notice" parameterType="com.lkm.shoppingmall.dto.product_notice" resultType="com.lkm.shoppingmall.dto.product_notice">
		SELECT * 
		FROM PRODUCTS_NOTICE
		WHERE PIDX = ${pIdx}
	</select>
	<select id="selectproduct_options" parameterType="int" resultType="com.lkm.shoppingmall.dto.product_optionDto">
		SELECT b.*
		FROM PRODUCTS_OPTION a inner join products_option b  on a.poidx =b.podept
		where a.podept =0 AND a.pidx = b.pidx AND a.pidx = #{param1}
	</select>
	<select id="selecttop_options" parameterType="int" resultType="com.lkm.shoppingmall.dto.product_optionDto">
		SELECT * 
		FROM PRODUCTS_OPTION
		WHERE PIDX=#{param1} AND PODEPT =0
	</select>
	
	<select id="selectDidx" parameterType="int" resultType="int">
		SELECT DIDX
		FROM PRODUCTS
		WHERE PIDX=#{param1}
	</select>
	<update id="updateProducts" parameterType="com.lkm.shoppingmall.dto.productsDto">
		UPDATE PRODUCTS
		SET PNAME = '${pName}',
			PORDER_PRICE =${pOrder_price},
			POST_DEPT='${post_dept},
			PTAG='${pTag}'
			PSUMNAIL = '${pSumnail}'
		WHERE PIDX = ${pIdx}
	</update>
	<update id="updateNotice" parameterType="com.lkm.shoppingmall.dto.product_notice">
		UPDATE PRODUCTS_NOTICE
		SET PNIMG = '${pNimg}',
			PIMG = '${pImg}'
		WHERE PIDX = ${pIdx}
	</update>
	<delete id="deleteOptions" parameterType="int">
		DELETE FROM PRODUCTS_OPTION
		WHERE PIDX = #{param1}
	</delete>
	
	<select id="selectDept" parameterType="int" resultType="com.lkm.shoppingmall.dto.departmentDto">
		SELECT d.*
		FROM DEPT d,PRODUCTS p
		WHERE p.PIDX =#{param1} and d.DIDX = p.DIDX
	</select>
	<select id="getReviewList" parameterType="int" resultType="com.lkm.shoppingmall.dto.reviewDto">
		SELECT r.*,DECODE(b.UIDX,0,(SELECT DID FROM DEPT WHERE DIDX=b.pDIDX),(SELECT USERID FROM USERS  WHERE UIDX=b.UIDX)) as
		FROM BUYS b,review r
		WHERE r.BIDX = b.BIDX AND r.PIDX=#{param1}
		ORDER BY r.BIDX
	</select>
	
	<select id="getbuysOption" parameterType="int" resultType="com.lkm.shoppingmall.dto.buyOptionDto">
		SELECT bo.* 
		FROM BUYS_OPTIONS bo, buys b  
		where b.pidx = #{param1} AND bo.bidx = b.bidx
		ORDER BY BO.BIDX
	</select>
	<select id="getOption2" parameterType="Map" resultType="com.lkm.shoppingmall.dto.product_optionDto">
		SELECT * 
		FROM PRODUCTS_OPTION 
		WHERE PIDX=${pIdx} and PODEPT=${poidx}
	</select>
	
	<select id="getUserInfo" parameterType="String" resultType="com.lkm.shoppingmall.dto.userDto">
		SELECT * 
		FROM USERS
		WHERE UIDX =#{param1}
	</select>
	
	<select id="getDeptInfo" parameterType="String" resultType="com.lkm.shoppingmall.dto.departmentDto">
		SELECT * 
		FROM DEPT
		WHERE DIDX = #{param1}
	</select>
	
	
	<insert id="buy_insert" parameterType="Map">
		<selectKey keyProperty="bidx" resultType="int" order="BEFORE">
			SELECT BUYS_SEQ.NEXTVAL as bidx FROM DUAL
		</selectKey>
		
		INSERT INTO BUYS(
			BIDX,
			TOTAL_PRICE,
			BDATE,
			PIDX,
			BORDER_NUM,
			BORDER_STATUS,
			UIDX,
			DIDX,
			PDIDX,
			BORDER_MENT
		) VALUES(
			${bidx},
			${total_price},
			sysdate,
			${pidx},
			'${border_num}',
			${border_status},
			${uidx},
			${didx},
			${pdidx},
			'${border_ment}'	
		)
	</insert>
	<insert id="buy_option" parameterType="Map">
		INSERT INTO BUYS_OPTIONS(
			BOIDX,
			BONAME,
			BOPRICE,
			BOCOUNT,
			BIDX
		) VALUES(
			BUYS_OPTIONS_SEQ.NEXTVAL,
			'${boname}',
			${boprice},
			${count},
			${bidx}
		)
		
	</insert>
	<select id="orderList" parameterType="Map" resultType="com.lkm.shoppingmall.dto.orderListDto">
		SELECT *
		FROM BUYS
		WHERE BIDX =${bidx} AND UIDX=${uidx} AND PDIDX=${pdidx}
	</select>
	<select id="buy_total_price" parameterType="String" resultType="Map">
		SELECT SUM(BOPRICE *BOCOUNT) as total_price ,sum(BOCOUNT) as bocount
		FROM BUYS_OPTIONS
		WHERE BIDX =#{bidx}
	</select>
	<select id="getBuy_options" parameterType="String" resultType="com.lkm.shoppingmall.dto.buys_optionDto">
		SELECT *
		FROM BUYS_OPTIONS
		WHERE BIDX =#{bidx}
	</select>
	<insert id="insert_cart" parameterType="Map">
		<selectKey keyProperty="cidx" resultType="int" order="BEFORE">
			SELECT CART_SEQ.NEXTVAL as cidx FROM DUAL
		</selectKey>
		INSERT INTO CART(
			CIDX,
			CNAME,
			CPRICE,
			CTOTAL_COUNT,
			UIDX,
			DIDX,
			PIDX
		) VALUES(
			${cidx},
			'${cname}',
			${cprice},
			${ctotal_count},
			${uidx},
			${didx},
			${pidx}
		)
	</insert>
	
	<!-- 상품 excel로 만들기에 필요한 데이터  -->
	<select id="getFile" parameterType="String" resultType="com.lkm.shoppingmall.dto.Dept_OrderList_ToFile">
		SELECT *
		FROM (SELECT b.BIDX,b.BORDER_NUM,b.BORDER_MENT,bo.boname,bo.bocount,u.UADDRESS as address,u.UNAME as name,u.UPHONE as phone
		      FROM BUYS b RIGHT OUTER JOIN BUYS_OPTIONS bo on b.BIDX =bo.BIDX RIGHT OUTER JOIN USERS u on u.UIDX=b.Uidx
		      WHERE b.DIDX =#{didx} AND b.POST_NUM IS NULL AND b.BORDER_STATUS =2 AND ENIDX IS NULL
		      UNION 
		      SELECT b.BIDX,b.BORDER_NUM,b.BORDER_MENT,bo.boname,bo.bocount,d.DADDRESS,d.DNAME,d.DPHONE
		      FROM BUYS b RIGHT OUTER JOIN BUYS_OPTIONS bo on b.BIDX =bo.BIDX RIGHT OUTER JOIN DEPT d on d.DIDX=b.PDidx
		      WHERE b.DIDX =#{didx} AND b.POST_NUM IS NULL  AND b.BORDER_STATUS =2 AND ENIDX IS NULL
			)
	</select>
	<select id="getDname" parameterType="String" resultType="String">
		SELECT DNAME
		FROM DEPT
		WHERE DIDX=#{didx}
	</select>
	<select id="DeptTodayExcelCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM EXCEL_FILE
		WHERE EN_DATE='${date}' and DIDX=${didx}
	</select>
	<delete id="Delete_excel" parameterType="Map">
		DELETE EXCEL_FILE
		WHERE ENFILE_NAME='${filename}'
	</delete>
	<insert id="Insert_excel" parameterType="Map" >
		<selectKey keyProperty="enidx" resultType="int" order="BEFORE">
			SELECT EXCEL_FILE_SEQ.nextval as enidx FROM dual
		</selectKey>
		
		INSERT INTO EXCEL_FILE(
			ENIDX,
			ENFILE_NAME,
			EN_DATE,
			DIDX
		) VALUES(
			${enidx},
			'${filename}',
			'${date}',
			${didx}
		)
	</insert>
	<update id="Update_buys" parameterType="Map">
		UPDATE BUYS
		SET ENIDX=${enidx}
		WHERE BIDX =${bidx}
	</update>
	
	<select id="getFileList" parameterType="Map" resultType="com.lkm.shoppingmall.dto.Excel_FileDto">
		SELECT EN_DATE,COUNT(EN_DATE) as total
		FROM EXCEL_FILE
		WHERE DIDX =${didx} AND EN_DATE BETWEEN '${stDay}' and '${endDay}'
		GROUP BY EN_DATE
		ORDER BY EN_DATE ASC
	</select>
	
	<select id="excelFileList" parameterType="Map" resultType="com.lkm.shoppingmall.dto.Excel_FileDto">
		SELECT *
		FROM EXCEL_FILE
		WHERE DIDX =${didx} AND EN_DATE ='${enDate}'
		ORDER BY ENIDX ASC ,EN_DATE ASC
	</select>
	<update id="update_excelFile_final" parameterType="Map">
		UPDATE EXCEL_FILE
		SET ENFILE_FINAL='${en_file_final}'
		WHERE ENIDX=${enidx}
	</update>
	<update id="update_post_num" parameterType="Map">
		UPDATE BUYS 
		SET POST_NUM = '${post_num}' AND BSTATUS=3
		WHERE BIDX=${bidx} AND ENIDX=${enidx}
	</update>
</mapper>